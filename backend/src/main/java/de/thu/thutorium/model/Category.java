package de.thu.thutorium.model;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

/**
 * Represents a category entity in the system.
 * <p>
 * This class maps to the "category" table in the database and defines the structure
 * for category data, such as a unique identifier and the category name.
 * <p>
 * The class also defines a one-to-many relationship with the `Course` entity, meaning
 * one category can have multiple associated courses.
 * <p>
 * Lombok annotations are used to automatically generate boilerplate code like getters,
 * setters, constructors, etc.
 */
@Entity
@Table(name = "category")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Category {

    /**
     * The unique identifier for a category, auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "category_id")
    private Long categoryId;

    /**
     * The name of the category, must be unique and cannot be null.
     */
    @Column(name = "category_name", nullable = false, unique = true)
    private String categoryName;

    /**
     * Defines a one-to-many relationship where one category can have multiple courses.
     * This field establishes the connection between Category and Course entities.
     */
    @OneToMany(mappedBy = "category")
    private List<Course> courses;
}
